# path to your file
$path = "src\main\java\dataStructures\MyChain.java"

# read raw bytes
$bytes = [System.IO.File]::ReadAllBytes($path)

# drop UTF-8 BOM if present (EF BB BF)
if ($bytes.Length -ge 3 -and $bytes[0] -eq 239 -and $bytes[1] -eq 187 -and $bytes[2] -eq 191) {
  $bytes = $bytes[3..($bytes.Length-1)]
}

# decode as UTF-8 (no BOM)
$text = [System.Text.Encoding]::UTF8.GetString($bytes)

# normalize newlines
$text = $text -replace "`r`n","`n"

# remove ANY stray U+FEFF and ALL existing 'package ...;' lines anywhere
$text = $text.TrimStart()
$text = ($text -split "`n" | Where-Object { $_ -notmatch '^\s*package\s+.*;' }) -join "`n"

# prepend the single correct package header
$text = "package dataStructures;`n" + $text.TrimStart()

# (optional) drop 'import dataStructures.Chain;' if present (same package, not needed)
$text = ($text -split "`n" | Where-Object { $_ -notmatch '^\s*import\s+dataStructures\.Chain;\s*$' }) -join "`n"

# write back as UTF-8 *without* BOM
$enc = New-Object System.Text.UTF8Encoding($false)
[System.IO.File]::WriteAllText((Resolve-Path $path), $text, $enc)


# run
mkdir out -Force | Out-Null
javac -d out -sourcepath "src\main\eprogs;src\main\java" "src\main\java\dataStructures\MyChain.java"
java -cp out dataStructures.MyChain



cmd /c "javac -d out -sourcepath src\main\eprogs;src\main\java src\main\eprogs\dataStructures\LinearList.java src\main\eprogs\dataStructures\ArrayLinearListIterator.java src\main\eprogs\dataStructures\ArrayLinearList.java src\main\eprogs\utilities\ChangeArrayLength.java src\main\java\MyArrayLinearList.java"
java -cp out MyArrayLinearList
